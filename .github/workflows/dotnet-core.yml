jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build

  test:
    # needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet test -p:CollectCoverage=true

  analyze:
    needs: [build, test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet tool install --global dotnet-sonarscanner --version 4.10.0
      # - run: | #multiline value
      #     dotnet sonarscanner begin -o:'wampidu' -k:'wampidu_p1repo' -d:sonar.login='628ad7c708c45f8249f44ca9221ff1be7376ee2e' -d:sonar.host.url='https://sonarcloud.io'
      #     dotnet build
      #     dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
      #     dotnet sonarscanner end -d:sonar.login='628ad7c708c45f8249f44ca9221ff1be7376ee2e'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: echo ${DOCKER_TOKEN} | docker login -u kyeel1 --password-stdin
      - run: docker image build -f ./dockerfile -t perspective ./Perspective
      - run: docker image tag perspective kyeel1/perspective
      - run: docker image push kyeel1/perspective
      - run: docker logout

name: cibuild

on: push
#maybe?

# deploy:

# for selecting specific branch
# on:
#   push:
#     branches:
#       - master

# person: #object
#   firstName: 'string' #string
#   lastName: 100 #number
#   middleName: true #boolean
#   alias: #collection
#     - 'dotnet'
#     - 'lead'
#     - subAlias:
